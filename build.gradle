plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.4.10'
    id 'org.jetbrains.dokka' version '1.4.10'
}

ext {
    nodeVersion = '12.19.0'
    qunitVersion = '2.11.3'
    junitVersion = '5.7.0'
    jacopVersion = '4.7.0'
    dl4jVersion = '1.0.0-beta7'
    sat4jVersion = '2.3.5'
    libraries = [
            jacop                     : "org.jacop:jacop:$jacopVersion",
            nd4j                      : "org.nd4j:nd4j-native-platform:$dl4jVersion",
            dl4j                      : "org.deeplearning4j:deeplearning4j-nn:$dl4jVersion",
            sat4j                     : "org.ow2.sat4j:org.ow2.sat4j.maxsat:$sat4jVersion"
    ]
}

wrapper {
    gradleVersion = '6.6.1'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

group 'com.github.rasros.combo'
version '0.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
}

kotlin {
    jvm {
        withJava()
    }
    js {
        nodejs() {
            testTask {
                useMocha {
                    timeout = "5000"
                }
            }
    }
    }

    sourceSets {
        commonMain {
            kotlin.srcDir('common/src/main/kotlin')
        }
        commonTest {
            kotlin.srcDir('common/src/test/kotlin')
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }

        jvmMain {
            kotlin.srcDir('jvm/src/main/kotlin')
            dependencies {
                compileOnly libraries.dl4j
                compileOnly libraries.nd4j
                compileOnly libraries.sat4j
                compileOnly libraries.jacop
            }
        }
        jvmTest {
            kotlin.srcDir('jvm/src/test/kotlin')
            dependencies {
                implementation kotlin('test-junit')
                implementation libraries.dl4j
                implementation libraries.nd4j
                implementation libraries.sat4j
                implementation libraries.jacop
            }
        }
        jsMain {
            kotlin.srcDir('js/src/main/kotlin')
        }
        jsTest {
            kotlin.srcDir('js/src/test/kotlin')
            dependencies {
                implementation kotlin('test-js')
            }
        }
    }
}

allprojects {
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            freeCompilerArgs += "-Xjvm-default=enable"
            jvmTarget = "11"
        }
    }
}
